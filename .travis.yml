if: >  # Forbid running non-PR pushes from pyup bot
  not (type != pull_request AND branch =~ ^pyup\-scheduled\-update\-)

dist: xenial

language: python

python:
- 3.5
- 3.6
- &mainstream_python 3.7
- 3.8-dev
- pypy3

install:
- &upgrade_python_toolset pip install --upgrade pip wheel setuptools

before_script:
- &ci_requirements pip install --upgrade -r requirements/ci.txt

script:
- make cov-ci-run

after_success:
 - codecov

_helpers:
  # anchor nodes to be included elsewhere.
  # names that start with _ are only used in other helpers
- &_mainstream_python_base
  python: *mainstream_python
- &_reset_steps
  env: []
  before_install: skip
  install: skip
  script: skip

- &lint_base
  <<: *_mainstream_python_base
  <<: *_reset_steps
  stage: &doc_stage_name docs, linting and pre-test checks
  env:
    FROZENLIST_NO_EXTENSIONS: "1"
  install:
  - *upgrade_python_toolset
  - *ci_requirements
  before_script: skip

- &_generic_deploy_base
  <<: *_reset_steps
  deploy: &_deploy_defaults
    provider: pypi
    skip_existing: true
    username: __token__
    password:
      # Encrypted with `travis encrypt`:
      secure: "g2vsmxtSSFpw910Z8p0+AeMK7VM8B6C/IFdxjiKFS+6ZpmIcrg0MuOVjYk1fSoKl7lE5e0ec/c5Uow1bypvR7jYHgGCoUv1Zdrg+xcUi/QUgKbtjzRZiegVeIvXJiMFRag4wniXmWAkEad92fGyFkAXwDYgwqmCiGKmdVyqYYuGPcxuLLVeXKw2yy8l1A/Y2KcJJu3bU5zya4kDV9oRj8SCqgltXI2iMJ3VohPNQ3BmTWLugGhe9NKCD4xvhcy/xB2LJuCo8ojpMSVci40Swqev6TsvHpTM1528MyCkjJrW5I7W3L+5HVbO4H4emOQ4iTvZzRY7s99lFuHsNDvNNPx0f/5JIG+MQf2DrwEk5aLL+eP1GKQELHg5wjTo9UvC0TIAyvSKqKDR8LV6MPpm2jcJ8UuiFb/+nfmLwkynXmKs/+lBse1IwdY5YQusgzAycoU98x/PI2Zmo+m6w6T6/vMxNcU6mxO2DGIuC25yA/xhcfWAxydJLz6nkQCeQa85Zl/UX1ZAWjWFV4OLo2JogGQAN6s0Lwp9fZUQd1C1uA2iZKILSgGdMcXGDh1A8Nfmu6fsCSqlYS250KpVwi1En0U2RMmhtdPfFcOKOOvjyliyaLSN5DtEGl+VqphpCL+da5OoG5QxPy4p88aOS79BA4171gUKWSsMCw0cwrF0MDQE="
    on:
      tags: true
      all_branches: true

- &_osx_pypi_deploy_base
  <<: *_generic_deploy_base
  stage: &osx_deploy_stage_name OS X test and deploy to PYPI
  os: osx
  language: shell
  env:
  - &env_pyenv PYENV_ROOT="$HOME/.pyenv"
  - &env_path PATH="$PYENV_ROOT/bin:$PATH"
  before_install:
  - brew update
  - |
    if brew ls --versions pyenv > /dev/null; then
      brew outdated pyenv || brew upgrade pyenv
      if brew ls --versions pyenv-virtualenv > /dev/null; then
        brew outdated pyenv-virtualenv || brew upgrade pyenv-virtualenv
      else
        brew install pyenv-virtualenv
      fi
    else
      brew install pyenv pyenv-virtualenv
    fi
  - |
    eval "$(pyenv init -)"
    mkdir -pv $(pyenv root)/cache  # ensure pyenv caches downloads
    pyenv versions
    eval "$(pyenv virtualenv-init -)"
    PYENV_PYTHON_VERSION="$(pyenv install --list \
      | grep -E "^\\s*$PYTHON_VERSION" \
      | sort -n -t. -k3 \
      | tail -n1 \
      | tr -d '[:space:]' \
      )"
    echo $PYENV_PYTHON_VERSION
  - pyenv install --skip-existing --keep --verbose "$PYENV_PYTHON_VERSION"
  - pyenv shell "$PYENV_PYTHON_VERSION"
  - python --version
  # upgrade pip in the virtualenv so the PIP_USER pip dpl_pypi installs
  # doesn't break.
  - pip install --upgrade pip
  before_cache:
  - brew --cache
  deploy:
    <<: *_deploy_defaults
    distributions: bdist_wheel

# OS X test and deploy matrix helpers
# These are used to build a matrix, with
# N OSX image options and M python options,
# of the form:
#
#   - <<: *osx_pypi_deploy_base_<osx version>
#     name: <build name (optional)>
#     env: *osx_env_<python version>

# OS X image options
- &osx_pypi_deploy_base_1010
  <<: *_osx_pypi_deploy_base
  osx_image: xcode6.4
- &osx_pypi_deploy_base_1011
  <<: *_osx_pypi_deploy_base
  osx_image: xcode7.3
- &osx_pypi_deploy_base_1012
  <<: *_osx_pypi_deploy_base
  osx_image: xcode8.3

# OS X Python options
- &osx_env_py35
  - PYTHON_VERSION: "3.5"
  - *env_pyenv
  - *env_path
- &osx_env_py36
  - PYTHON_VERSION: "3.6"
  - *env_pyenv
  - *env_path
- &osx_env_py37
  - PYTHON_VERSION: "3.7"
  - *env_pyenv
  - *env_path

- &linux_pypi_deploy_base
  <<: *_generic_deploy_base
  <<: *_mainstream_python_base
  stage: &deploy_stage_name Linux build and deploy
  deploy:
    <<: *_deploy_defaults
    # `skip_cleanup: true` is required to preserve binary wheels, built
    # inside of manylinux1 docker container during `script` step.
    skip_cleanup: true

os: linux

matrix:
  fast_finish: true
  allow_failures:
  - python: 3.8-dev

  include:
  - name: without extensions
    python: *mainstream_python
    env:
      FROZENLIST_NO_EXTENSIONS: "1"

  - <<: *lint_base
    name: Checking docs spelling
    before_script:
    - pip install --upgrade -r requirements/doc-spelling.txt
    script:
    - make doc-spelling
    after_failure: cat docs/_build/spelling/output.txt
    addons:
      apt:
        packages:
        - libenchant-dev

  - <<: *lint_base
    name: Checking Towncrier fragments
    before_script:
    - pip install --upgrade -r requirements/towncrier.txt
    script:
    - towncrier --yes

  - <<: *lint_base
    name: Linting source code with flake8
    before_script:
    - pip install --upgrade -r requirements/flake.txt
    script:
    - flake8 frozenlist tests

  - <<: *lint_base
    name: Linting source code with mypy
    script:
    - mypy frozenlist

  - <<: *lint_base
    name: Verifying distribution package metadata
    script:
    - python setup.py --verbose sdist bdist_wheel
    - twine check dist/*

  - <<: *lint_base
    name: Making sure that CONTRIBUTORS.txt remains sorted
    language: shell
    install: skip
    script:
    - LC_ALL=C sort -c CONTRIBUTORS.txt

  # Build and deploy MacOS binary wheels for each OSX + Python combo possible
  - <<: *osx_pypi_deploy_base_1010
    name: binary wheel python 3.5 on OS X 10.10
    env: *osx_env_py35
  - <<: *osx_pypi_deploy_base_1010
    name: binary wheel python 3.6 on OS X 10.10
    env: *osx_env_py36
  - <<: *osx_pypi_deploy_base_1010
    name: binary wheel python 3.7 on OS X 10.10
    env: *osx_env_py37
  - <<: *osx_pypi_deploy_base_1011
    name: binary wheel python 3.5 on OS X 10.11
    env: *osx_env_py35
  - <<: *osx_pypi_deploy_base_1011
    name: binary wheel python 3.6 on OS X 10.11
    env: *osx_env_py36
  - <<: *osx_pypi_deploy_base_1011
    name: binary wheel python 3.7 on OS X 10.11
    env: *osx_env_py37
  - <<: *osx_pypi_deploy_base_1012
    name: binary wheel python 3.5 on OS X 10.12
    env: *osx_env_py35
  - <<: *osx_pypi_deploy_base_1012
    name: binary wheel python 3.6 on OS X 10.12
    env: *osx_env_py36
  - <<: *osx_pypi_deploy_base_1012
    name: binary wheel python 3.7 on OS X 10.12
    env: *osx_env_py37

  # Build and deploy manylinux1 binary wheels and source distribution
  - <<: *linux_pypi_deploy_base
    name: Build and deploy source distribution and manylinux1 binary wheels
    services:
    - docker
    script:
    - ./tools/run_docker.sh "frozenlist"

stages:
- *doc_stage_name
- test
- name: *osx_deploy_stage_name
  if: type IN (api, cron) OR tag IS present
- name: *deploy_stage_name
  if: type IN (api, cron) OR tag IS present


cache:
  pip: true
  directories:
    # cache Pyenv versions
    ~/.pyenv/cache
    ~/.pyenv/versions

before_cache:
- rm -f $HOME/.cache/pip/log/debug.log
